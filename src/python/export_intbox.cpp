#include <boost/python.hpp>
#include <boost/python/overloads.hpp>
#include <memory>
#include <lightspeed/intbox.hpp>
#include <lightspeed/pair_list.hpp>
#include <lightspeed/tensor.hpp>
#include <lightspeed/resource_list.hpp>

using namespace lightspeed;
using namespace boost::python;

BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_charge_grad_self_ov,IntBox::chargeGradSelf,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_charge_grad_other_ov,IntBox::chargeGradOther,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_charge_field_other_ov,IntBox::chargeFieldOther,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_charge_potential_ov,IntBox::chargePotential,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_overlap_ov,IntBox::overlap,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_overlapCPU_ov,IntBox::overlapCPU,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_dipole_ov,IntBox::dipole,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_dipoleCPU_ov,IntBox::dipoleCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_quadrupole_ov,IntBox::quadrupole,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_quadrupoleCPU_ov,IntBox::quadrupoleCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_nabla_ov,IntBox::nabla,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_nablaCPU_ov,IntBox::nablaCPU,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_angularMomentum_ov,IntBox::angularMomentum,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_angularMomentumCPU_ov,IntBox::angularMomentumCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_kinetic_ov,IntBox::kinetic,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_kineticCPU_ov,IntBox::kineticCPU,2,3)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potential_ov,IntBox::potential,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialCPU_ov,IntBox::potentialCPU,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGrad_ov,IntBox::potentialGrad,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGradCPU_ov,IntBox::potentialGradCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGradAdv_ov,IntBox::potentialGradAdv,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGradAdvCPU_ov,IntBox::potentialGradAdvCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGradAdv2_ov,IntBox::potentialGradAdv2,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_potentialGradAdv2CPU_ov,IntBox::potentialGradAdv2CPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulomb_ov,IntBox::coulomb,7,8)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombCPU_ov,IntBox::coulombCPU,7,8)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombTC_ov,IntBox::coulombTC,7,8)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombGrad_ov,IntBox::coulombGrad,7,8)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombGradTC_ov,IntBox::coulombGradTC,7,8)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombGradAdv_ov,IntBox::coulombGradAdv,8,9)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombGradSymmCPU_ov,IntBox::coulombGradSymmCPU,6,7)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_coulombGradAdvCPU_ov,IntBox::coulombGradAdvCPU,8,9)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchange_ov,IntBox::exchange,8,9)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeCPU_ov,IntBox::exchangeCPU,8,9)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeTC_ov,IntBox::exchangeTC,8,9)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeGrad_ov,IntBox::exchangeGrad,10,11)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeGradTC_ov,IntBox::exchangeGradTC,10,11)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeGradAdv_ov,IntBox::exchangeGradAdv,11,12)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeGradSymmCPU_ov,IntBox::exchangeGradSymmCPU,6,7)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_exchangeGradAdvCPU_ov,IntBox::exchangeGradAdvCPU,11,12)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_overlapGrad_ov,IntBox::overlapGrad,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_overlapGradAdv_ov,IntBox::overlapGradAdv,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_overlapGradAdvCPU_ov,IntBox::overlapGradAdvCPU,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_kineticGrad_ov,IntBox::kineticGrad,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_kineticGradAdv_ov,IntBox::kineticGradAdv,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_kineticGradAdvCPU_ov,IntBox::kineticGradAdvCPU,3,4)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_dipoleGrad_ov,IntBox::dipoleGrad,6,7)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_dipoleGradAdv_ov,IntBox::dipoleGradAdv,6,7)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_dipoleGradAdvCPU_ov,IntBox::dipoleGradAdvCPU,6,7)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_esp_ov,IntBox::esp,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_espCPU_ov,IntBox::espCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_field_ov,IntBox::field,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_fieldCPU_ov,IntBox::fieldCPU,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_ecp_ov,IntBox::ecp,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_ecpGrad_ov,IntBox::ecpGrad,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_ecpTC_ov,IntBox::ecpTC,4,5)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_ecpGradTC_ov,IntBox::ecpGradTC,5,6)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_eriJ_ov,IntBox::eriJ,10,11)
BOOST_PYTHON_FUNCTION_OVERLOADS(intbox_eriGradJ_ov,IntBox::eriGradJ,7,8)

void export_intbox()
{
    class_<IntBox>("IntBox", no_init)
        .def("chargeEnergySelf", &IntBox::chargeEnergySelf)
        .staticmethod("chargeEnergySelf")
        .def("chargeGradSelf", &IntBox::chargeGradSelf, intbox_charge_grad_self_ov())
        .staticmethod("chargeGradSelf")
        .def("chargeEnergyOther", &IntBox::chargeEnergyOther)
        .staticmethod("chargeEnergyOther")
        .def("chargeGradOther", &IntBox::chargeGradOther, intbox_charge_grad_other_ov())
        .staticmethod("chargeGradOther")
        .def("chargeFieldOther", &IntBox::chargeFieldOther, intbox_charge_field_other_ov())
        .staticmethod("chargeFieldOther")
        .def("chargePotential", &IntBox::chargePotential, intbox_charge_potential_ov())
        .staticmethod("chargePotential")
        .def("overlap", &IntBox::overlap, intbox_overlap_ov())
        .staticmethod("overlap")
        .def("overlapCPU", &IntBox::overlapCPU, intbox_overlapCPU_ov())
        .staticmethod("overlapCPU")
        .def("dipole", &IntBox::dipole, intbox_dipole_ov())
        .staticmethod("dipole")
        .def("dipoleCPU", &IntBox::dipoleCPU, intbox_dipoleCPU_ov())
        .staticmethod("dipoleCPU")
        .def("quadrupole", &IntBox::quadrupole, intbox_quadrupole_ov())
        .staticmethod("quadrupole")
        .def("quadrupoleCPU", &IntBox::quadrupoleCPU, intbox_quadrupoleCPU_ov())
        .staticmethod("quadrupoleCPU")
        .def("nabla", &IntBox::nabla, intbox_nabla_ov())
        .staticmethod("nabla")
        .def("nablaCPU", &IntBox::nablaCPU, intbox_nablaCPU_ov())
        .staticmethod("nablaCPU")
        .def("angularMomentum", &IntBox::angularMomentum, intbox_angularMomentum_ov())
        .staticmethod("angularMomentum")
        .def("angularMomentumCPU", &IntBox::angularMomentumCPU, intbox_angularMomentumCPU_ov())
        .staticmethod("angularMomentumCPU")
        .def("kinetic", &IntBox::kinetic, intbox_kinetic_ov())
        .staticmethod("kinetic")
        .def("kineticCPU", &IntBox::kineticCPU, intbox_kineticCPU_ov())
        .staticmethod("kineticCPU")
        .def("potential", &IntBox::potential, intbox_potential_ov())
        .staticmethod("potential")
        .def("potentialCPU", &IntBox::potentialCPU, intbox_potentialCPU_ov())
        .staticmethod("potentialCPU")
        .def("potentialGrad", &IntBox::potentialGrad, intbox_potentialGrad_ov())
        .staticmethod("potentialGrad")
        .def("potentialGradCPU", &IntBox::potentialGradCPU, intbox_potentialGradCPU_ov())
        .staticmethod("potentialGradCPU")
        .def("potentialGradAdv", &IntBox::potentialGradAdv, intbox_potentialGradAdv_ov())
        .staticmethod("potentialGradAdv")
        .def("potentialGradAdvCPU", &IntBox::potentialGradAdvCPU, intbox_potentialGradAdvCPU_ov())
        .staticmethod("potentialGradAdvCPU")
        .def("potentialGradAdv2", &IntBox::potentialGradAdv2, intbox_potentialGradAdv2_ov())
        .staticmethod("potentialGradAdv2")
        .def("potentialGradAdv2CPU", &IntBox::potentialGradAdv2CPU, intbox_potentialGradAdv2CPU_ov())
        .staticmethod("potentialGradAdv2CPU")
        .def("coulomb", &IntBox::coulomb, intbox_coulomb_ov())
        .staticmethod("coulomb")
        .def("coulombCPU", &IntBox::coulombCPU, intbox_coulombCPU_ov())
        .staticmethod("coulombCPU")
        .def("coulombTC", &IntBox::coulombTC, intbox_coulombTC_ov())
        .staticmethod("coulombTC")
        .def("coulombGrad", &IntBox::coulombGrad, intbox_coulombGrad_ov())
        .staticmethod("coulombGrad")
        .def("coulombGradTC", &IntBox::coulombGradTC, intbox_coulombGradTC_ov())
        .staticmethod("coulombGradTC")
        .def("coulombGradAdv", &IntBox::coulombGradAdv, intbox_coulombGradAdv_ov())
        .staticmethod("coulombGradAdv")
        .def("coulombGradSymmCPU", &IntBox::coulombGradSymmCPU, intbox_coulombGradSymmCPU_ov())
        .staticmethod("coulombGradSymmCPU")
        .def("coulombGradAdvCPU", &IntBox::coulombGradAdvCPU, intbox_coulombGradAdvCPU_ov())
        .staticmethod("coulombGradAdvCPU")
        .def("exchange", &IntBox::exchange, intbox_exchange_ov())
        .staticmethod("exchange")
        .def("exchangeCPU", &IntBox::exchangeCPU, intbox_exchangeCPU_ov())
        .staticmethod("exchangeCPU")
        .def("exchangeTC", &IntBox::exchangeTC, intbox_exchangeTC_ov())
        .staticmethod("exchangeTC")
        .def("exchangeGrad", &IntBox::exchangeGrad, intbox_exchangeGrad_ov())
        .staticmethod("exchangeGrad")
        .def("exchangeGradTC", &IntBox::exchangeGradTC, intbox_exchangeGradTC_ov())
        .staticmethod("exchangeGradTC")
        .def("exchangeGradAdv", &IntBox::exchangeGradAdv, intbox_exchangeGradAdv_ov())
        .staticmethod("exchangeGradAdv")
        .def("exchangeGradSymmCPU", &IntBox::exchangeGradSymmCPU, intbox_exchangeGradSymmCPU_ov())
        .staticmethod("exchangeGradSymmCPU")
        .def("exchangeGradAdvCPU", &IntBox::exchangeGradAdvCPU, intbox_exchangeGradAdvCPU_ov())
        .staticmethod("exchangeGradAdvCPU")
        .def("overlapGrad", &IntBox::overlapGrad, intbox_overlapGrad_ov())
        .staticmethod("overlapGrad")
        .def("overlapGradAdv", &IntBox::overlapGradAdv, intbox_overlapGradAdv_ov())
        .staticmethod("overlapGradAdv")
        .def("overlapGradAdvCPU", &IntBox::overlapGradAdvCPU, intbox_overlapGradAdvCPU_ov())
        .staticmethod("overlapGradAdvCPU")
        .def("kineticGrad", &IntBox::kineticGrad, intbox_kineticGrad_ov())
        .staticmethod("kineticGrad")
        .def("kineticGradAdv", &IntBox::kineticGradAdv, intbox_kineticGradAdv_ov())
        .staticmethod("kineticGradAdv")
        .def("kineticGradAdvCPU", &IntBox::kineticGradAdvCPU, intbox_kineticGradAdvCPU_ov())
        .staticmethod("kineticGradAdvCPU")
        .def("dipoleGrad", &IntBox::dipoleGrad, intbox_dipoleGrad_ov())
        .staticmethod("dipoleGrad")
        .def("dipoleGradAdv", &IntBox::dipoleGradAdv, intbox_dipoleGradAdv_ov())
        .staticmethod("dipoleGradAdv")
        .def("dipoleGradAdvCPU", &IntBox::dipoleGradAdvCPU, intbox_dipoleGradAdvCPU_ov())
        .staticmethod("dipoleGradAdvCPU")
        .def("esp", &IntBox::esp, intbox_esp_ov())
        .staticmethod("esp")
        .def("espCPU", &IntBox::espCPU, intbox_espCPU_ov())
        .staticmethod("espCPU")
        .def("field", &IntBox::field, intbox_field_ov())
        .staticmethod("field")
        .def("fieldCPU", &IntBox::fieldCPU, intbox_fieldCPU_ov())
        .staticmethod("fieldCPU")
        .def("eriJ", &IntBox::eriJ, intbox_eriJ_ov())
        .staticmethod("eriJ")
        .def("eriGradJ", &IntBox::eriGradJ, intbox_eriGradJ_ov())
        .staticmethod("eriGradJ")
        .def("ecp", &IntBox::ecp, intbox_ecp_ov())
        .staticmethod("ecp")
        .def("ecpTC", &IntBox::ecpTC, intbox_ecpTC_ov())
        .staticmethod("ecpTC")
        .def("ecpGrad", &IntBox::ecpGrad, intbox_ecpGrad_ov())
        .staticmethod("ecpGrad")
        .def("ecpGradTC", &IntBox::ecpGradTC, intbox_ecpGradTC_ov())
        .staticmethod("ecpGradTC")
        ;
}
